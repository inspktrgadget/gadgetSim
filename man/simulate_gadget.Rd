% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{simulate_gadget}
\alias{simulate_gadget}
\title{Assemble an entire Gadget model with a single function}
\usage{
simulate_gadget(..., path = NULL)
}
\value{
Nothing. A Gadget model with the basic necessary files will be written to \code{path} if
specified. Otherwise the Gadget model files will be written to the current directory.
}
\description{
This function is the almagamation and pinnacle of gadgetSim. It allows a user to put together
all aspects of a Gadget model for simulation tesing purposes. Note that this function does not
write a likelihood file. If a Gadget model optimized to data is more desirable, then you should
look to the Rgadget package (specifically \code{\link[Rgadget]{gadget.iterative}}).
}
\details{
This function utilizes the framework of gadgetSim functions to easily assemble and write files
for a Gadget simulation model. It does not call the model directly, rather it sets up all files
desired for inclusion into the Gadget model. You will still; however, have to set up the params
files separately.

\code{...} should be a number of named elements corresponding to the following names: time, area,
stock (or stocks), and fleet (or fleets). Each of these named elements should also correspond to
their respective gadget_* classes as produced by the family of make_gadget_* functions (i.e.
\code{simulate_gadget(time = make_gadget_timefile(1985, 2015, "quarterly"))}, see example below).
}
\examples{
#------------------------------
# setup time and area
st_year <- 1985
end_year <- 2015
time <- make_gadget_timefile(st_year, end_year, "quarterly")
area <-
  make_gadget_areafile(areas = 1, size = 1e6,
                       temp_data = expand.grid(year = st_year:end_year, step = 1:4,
                                               area = 1, temp = 3))

#------------------------------
# setup the stock
# setup basic stock information
minage <- 1
maxage <- 10
minlength <- 1
maxlength <- 100
dl <- 1
alpha <- 1e-04
beta <- 3
reflength <- seq(minlength, maxlength, dl)
stock_info <-
    list(stockname = "cod", livesonareas = 1, minage = 1, maxage = 10,
         minlength = minlength, maxlength = maxlength, dl = dl)

# setup refweightfile
stock_refwgt <-
    data.frame(len = reflength,
               weight = alpha * reflength ^ beta)

# setup growth
stock_growth <-
    list(growthfunction = "lengthvbsimple",
         growthparameters =
             c(to_gadget_formula(quote(cod.linf)), to_gadget_formula(quote(cod.k)),
               0.001, 3))
# setup naturalmortality
stock_m <- rep(0.2, 10)

# setup initial conditions
init_data <-
    normalparamfile(age = seq(minage, maxage, 1),
                    area = 1,
                    age.factor = "#cod.init.age",
                    area.factor = "#cod.init.area",
                    mean = vb_formula("cod", minage:maxage),
                    sd = 1:10,
                    alpha = alpha,
                    beta = beta)
stock_initcond <- list(normalparamfile = init_data)

# setup spawning
stock_spawnfile <-
    make_gadget_spawnfile(
      stockname = "cod",
      start_year = st_year,
      end_year = end_year,
      recruitment = ricker_formula("cod")
    )

# create gadget stockfile
cod <-
   make_gadget_stockfile(stock = stock_info,
                         refweightfile = stock_refwgt,
                         growth = stock_growth,
                         naturalmortality = stock_m,
                         iseaten = 1,
                         initialconditions = stock_initcond,
                         spawning = stock_spawnfile)

#-------------------------------
# setup the fleet
lin_flt_data <- expand.grid(year = st_year:end_year, steps = 1:4, area = 1, fleetname = "lin")
lin_flt_data <- lin_flt_data[order(lin_flt_data$year), ]
lin_flt_data$scaling <- c(seq(0.01,0.8, length.out = 62), seq(0.8,0.2,length.out = 62))
lin_fleet <-
    list(type = "linearfleet",
         suitability = exponentiall50_suit_formula("lin", "cod"),
         amount = lin_flt_data)
lin <- make_gadget_fleet(lin = lin_fleet)

#------------------------------
# simulate the Gadget model
simulate_gadget(time = time, area = area, stock = cod, fleet = lin, path = "test_model")

# must set up params first, then can run
stock_std <- get_stock_std(path = "test_model")
}
