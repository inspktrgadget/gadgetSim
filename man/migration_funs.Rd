% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_stockfile_functions.R
\name{migration_funs}
\alias{migration_funs}
\alias{migration_matrix}
\alias{migration_ratios}
\alias{format_migration}
\alias{format_migration.migration_matrix}
\alias{format_migration.migration_ratios}
\title{Helper functions to create and format migration matrices}
\usage{
migration_matrix(years, steps, areas, prop)

migration_ratios(years, steps, areas, prop)

format_migration(mig_matrix)

\method{format_migration}{migration_matrix}(mig_matrix)

\method{format_migration}{migration_ratios}(mig_ratios)
}
\arguments{
\item{years}{Numeric vector of years to specify migration proportions for}

\item{steps}{Numeric vector of steps to specify migration proportions for}

\item{areas}{Numeric vector of areas in the Gadget model}

\item{prop}{Vector of proportions to use. Can be numeric or character.
Length must be the same as \eqn{years * steps * areas^2} or a factor of such (or 1)}

\item{mig_matrix}{A \code{data.frame} of class "migration_matrix" as produced by
\code{migration_matrix}}

\item{A}{\code{data.frame} of class "migration_ratios" as produced by \code{migration_ratios}}
}
\value{
\code{migration_*} functions return a data.frame with class the same as the function name.
\code{format_migration_matrix} returns a list with each element a matrix or data.frame of the
migration ratios to be used
}
\description{
These functions create and format migration information for a Gadget stockfile. The
\code{migration_*} functions create a data.frame with class of the same name as the function
for use in \code{\link{check_stockfile_migration}}. The returned data.frame can then be read into
\code{format_migration} which will return a list of the correct structure to be written to file.
These functions will be most useful when migration proportions are not known and are specified as
a switch in the Gadget model
}
\examples{
years <- 1:2
steps <- 1:2
areas <- 1:2
ysa_combo <- c(paste(years, steps, sep = "."), paste(rev(years), steps, sep = "."))
prop <- sort(rep(paste("#cod.migration", ysa_combo, sep = "."), 4))
migration_matrix(years, steps, areas, prop)
}
